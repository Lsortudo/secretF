DONE_______  1. chamar as libs que vai usar
DONE_______  2. project structure
DONE_______  3. comando cobra
DONE_______  4. lista com os nomes
DONE_______  5. ler a lista
DONE_______  6. printar a lista para mim (conferir se todos os nomes foram printados)
DONE_______  7. conferir se tem numero par, caso for impar (ainda irei escolher se bota opcao de confirmar que quer fazer impar e alguem sobrar, ou mandar executar outro comando)
DONE_______  8. faazer a parte com par de retornar as duplas ja separas em um arquivo OUTPUT TXT


API CON
roomID      int
isEven      bool
name        string



oq vai acontecer:

DONE_______ Frontend tem um drag and drop (tambem tem um campo de ID, caso nao seja especificado sera gerado aleatoriamente)
DONE_______ Manda o arquivo
DONE_______ Back recebe arquivo
DONE_______ Le arquivo
DONE_______ Separa em pares
DONE_______ Devolve em JSON
DONE_______ Frontend listou isso com um codigo (codigo é gerado ao apertar o botao, entao consigo mandar do front pra ca, dar retrieve nisso e nos nomes)\
Adaptar o codigo pra receber o codigo self generated de 5 digitos e a lista
Fazer com que um mapa basico de map[string]string e depois consultar com nome do mapa[code] = pairs
Caso funcione o mapa, colocar um Postgrilo pra salvar
Usuario no front pode consultar uma rota só pra ter acesso ao banco (caso alguem queira confirmar que o sorteio foi oq X pessoa falou, sem precisar sortear dnv)
Por ultimo fazer uma limpa em arquivos inuteis + código boilerplate + melhorar ao maximo oq conseguir + setar tudo em ingles
Front consome a API e mostra (todos que tem o codigo pode colocar e ver, botar algo pra salvar em banco ou 24 hrs)



resolver next ->
Bastante portugues e ingles no codigo como comentario, resolver isso no final quando tudo tiver pronto; por tudo em ingles.
Checar variaveis e outras coisas em portugues também.